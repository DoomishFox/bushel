---
import type { LeafDetails } from "#database/leaf.ts";
import { GetLeafSourceString } from "#database/leaves.ts";
import { Notebook } from "./Editor/Notebook.react";

interface Props {
    leaf_id?: string;
    metadata?: LeafDetails;
}

const { metadata } = Astro.props;

const new_leaf_id = "new-leaf";

const leaf_metadata = metadata ?? {
    id: "new-leaf",
    path: "/new/",
    title: "untitled leaf",
    created_by: undefined,
    last_modified_date: new Date(),
    backlinks: undefined,
};
const back_path =
    leaf_metadata.id == new_leaf_id ? "/" : "/leaves/" + leaf_metadata.id;
const combined_path =
    leaf_metadata.id == new_leaf_id
        ? leaf_metadata.path + leaf_metadata.id
        : leaf_metadata.path;
const content =
    leaf_metadata.id != new_leaf_id
        ? await GetLeafSourceString(leaf_metadata.id!)
        : "";
---

<div class="page-content">
    <Notebook
        client:only="react"
        metadata={leaf_metadata}
        paragraphs={content?.split("\n\n") ?? [""]}
    />
</div>

<style>
    button {
        background: none;
        color: inherit;
        border: none;
        padding: 0;
        margin: 0;
        font: inherit;
        cursor: pointer;
        outline: inherit;
    }
    input {
        border: 2px solid var(--bg-border);
        border-radius: 10pt;
        box-sizing: border-box;
    }
    .button {
        /* margin: 0 0 0 18pt; */
        position: relative;
        padding: 4pt 10pt;
        display: flex;
        justify-content: center;
        align-items: center;
        border: 2px solid var(--bg-border);
        border-radius: 50px;
    }
    .button:hover {
        border-color: var(--bg-border-highlight);
    }
    .loading {
        color: transparent;
    }
    .loading:hover {
        background-color: transparent !important;
    }
    .loading::after {
        content: "";
        position: absolute;
        width: 16px;
        height: 16px;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        margin: auto;
        border: 4px solid var(--bg-border);
        border-top-color: var(--bg-border-highlight);
        border-radius: 50%;
        animation: button-loading-spinner 1s ease infinite;
    }
    #save {
        width: 56pt;
        margin-left: 24pt;
        border: 2px solid var(--bushel-primary);
    }
    #save:hover {
        border: 2px solid var(--bushel-primary);
        background-color: var(--bushel-primary);
    }
    #back {
        color: var(--text-primary);
        text-decoration: none;
        width: 36pt;
        margin-right: 24pt;
    }
    .pathline {
        /* padding: 10pt;
        border: 2px solid var(--bg-border);
        border-radius: 10pt; */
        margin-bottom: 36pt;
        display: flex;
    }
    .input-block {
        flex: 1;
    }
    .input-block input {
        width: 100%;
        padding: 6pt;
    }
    #title {
        font-size: 2em;
        padding: 10pt;
        width: 100%;
        margin-bottom: 10pt;
    }
    :global(.ProseMirror) {
        padding: 10pt;
        border: 2px solid var(--bg-border);
        border-radius: 10pt;
        blockquote {
            margin: 1.5em 0;
            padding: 0 1.25em;
            /* background-color: var(--bg-highlight); */
            border: 2px solid var(--bg-border);
            border-radius: 6pt;
        }
        span.md-url {
            span[data-text]::before {
                color: var(--text-inactive);
                content: "[";
            }
            span[data-text]::after {
                color: var(--text-inactive);
                content: "]";
            }
            span[data-href]::before {
                color: var(--text-inactive);
                content: "(";
            }
            span[data-href]::after {
                color: var(--text-inactive);
                content: ")";
            }
            span[data-title]::before {
                color: var(--text-inactive);
                content: " \"";
            }
            span[data-title]::after {
                color: var(--text-inactive);
                content: "\"";
            }
        }
        strong::before {
            color: var(--text-inactive);
            content: "**";
        }
        strong::after {
            color: var(--text-inactive);
            content: "**";
        }
        em::before {
            color: var(--text-inactive);
            content: "*";
        }
        em::after {
            color: var(--text-inactive);
            content: "*";
        }
    }
    .page-content {
        margin-bottom: 20vh;
        margin-top: 6pt;
    }
    @keyframes button-loading-spinner {
        from {
            transform: rotate(0turn);
        }

        to {
            transform: rotate(1turn);
        }
    }
</style>
