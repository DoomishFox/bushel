---
import type { LeafDetails } from '#database/leaf.ts';
import { GetLeafMetadata, GetRenderedLeafString } from '#database/leaves.ts';

interface Props {
    leaf_id?: string;
    metadata?: LeafDetails;
}

const { leaf_id, metadata } = Astro.props;

const leaf_metadata = metadata ?? await GetLeafMetadata(leaf_id!);
const content = await GetRenderedLeafString(leaf_id ?? leaf_metadata?.id!) ?? "<p>can't render leaf content</p>";
---

<div class="content">
    <h1 class="headline">{leaf_metadata?.title}</h1>
    <div class="byline">{new Date(leaf_metadata?.last_modified_date!).toLocaleDateString()} - {leaf_metadata?.created_by}</div>
    <div class="inserted-content" set:html={content}>
    </div>
    <div class="trailer">
        <div class="line"></div>
        <img src="/icon-transparent.png" />
    </div>
</div>

<style>
    .headline {
        margin-bottom: 4pt;
        font-weight: 500;
        word-wrap: break-word;
    }
    .byline {
        color: var(--text-subtle);
        font-size: 0.875rem;
    }
    .content {
        /* margin-bottom: 20vh; */
    }
    .trailer {
        height: 20vh;
        text-align: center;
        display: grid;
    }
    .trailer .line {
        grid-column: 1;
        grid-row: 1;
        display: inline-block;
        margin: auto;
        margin-top: 24pt;
		width: 50pt;
		border-top: 2px solid var(--bg-border);
    }
    .trailer img {
        grid-column: 1;
        grid-row: 1;
        display: inline-block;
        margin: auto;
        margin-top: 12pt;
        height: 24pt;
    }

    /* ==== MARKDOWN FORMATTING ==== */
    .inserted-content {
        h1 {
            margin-bottom: 0;
            margin-top: 2em;
            font-size: 2rem;
            font-weight: 600;
            line-height: 1.3;
            word-wrap: break-word;
        }

        h1::after {
            color: var(--text-subtle);
            padding-left: 10px;
            content: "#";
        }
        h2 {
            /* font-size: 1.5rem; */
            margin-top: 2em;
            font-weight: 500;
            line-height: 1;
            word-wrap: break-word;
        }

        h2:hover::after {
            color: var(--text-subtle);
            padding-left: 10px;
            content: "#";
        }

        h3 {
            /* font-size: 1.4rem; */
            margin-top: 2em;
            font-weight: 600;
            line-height: 1;
            word-wrap: break-word;
        }

        h3:hover::after {
            color: var(--text-subtle);
            padding-left: 10px;
            content: "#";
        }

        h4 {
            /* font-size: 1.3rem; */
            font-weight: 600;
            line-height: 1;
            word-wrap: break-word;
        }

        h4:hover::after {
            color: var(--text-subtle);
            padding-left: 10px;
            content: "#";
        }

        h5 {
            font-size: 1.2rem;
            font-weight: 500;
            line-height: 1;
            word-wrap: break-word;
        }

        h5:hover::after {
            color: var(--text-subtle);
            padding-left: 10px;
            content: "#";
        }

        a {
            color: var(--url-main);
            text-decoration: none;
        }
        a:hover {
            /* color: var(--url-hover); i dont like this color :/ */
            text-decoration: underline;
        }

        blockquote {
            margin: 1.5em 0;
            padding: 0 1.25em;
            /* background-color: var(--bg-highlight); */
            border: 2px solid var(--bg-border);
            border-radius: 6pt;
        }

        hr {
            height: .2em;
            padding: 0;
            margin: 24px 0;
            background-color: var(--bg-highlight);
            border: 0;
        }

        code {
            color: var(--code-color);
            background-color: var(--bg-highlight);
            border-radius: 2px;
            padding-top: 4px;
            padding-left: 3px;
            padding-right: 3px;
        }
    }
</style>
